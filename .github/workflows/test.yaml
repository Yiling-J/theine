---
name: Tests

on:
  push:
    branches:
      - main
      - "[0-9].[0-9]"
      - typing
  pull_request:
    branches: ["main"]

jobs:
  tests:
    name: "Python ${{ matrix.python-version }}"
    runs-on: "ubuntu-latest"

    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
      - uses: "actions/checkout@v3"
      - uses: "actions/setup-python@v4"
        with:
          python-version: "${{ matrix.python-version }}"
      - name: Install Poetry
        uses: abatilo/actions-poetry@v2
        with:
          version: 1.3
      - name: Setup Poetry
        run: "poetry config virtualenvs.in-project true"
      - name: Cache Deps
        uses: actions/cache@v4
        id: cached-poetry-dependencies
        with:
          path: .venv
          key: python-${{ matrix.python-version }}-pydeps-${{ hashFiles('**/poetry.lock') }}
      - name: "Install Dependencies"
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: "poetry install --no-interaction --no-root --all-extras"
      - name: "Run Lint"
        run: "make lint"
      - name: "Mypy api success"
        run: "make lint-pass"
      - name: "Mypy api failed"
        run: |
          error_count=$(make lint-failed 2>&1 | grep -c 'error:')
          [ "$error_count" -eq 4 ]
      - name: "Run Tests"
        env:
          CI: "TRUE"
        run: "make test"
